--! Tests to be loaded into ram for "milestone_one_test.vhd"

00000 00 00000 00000 001 01000 01101 11 	--! Hx000  LUI:   loads value Dx4096 into r8
00000 00 00000 00000 010 01001 01101 11 	--! Hx020  LUI:   loads value Dx8192 into r9
00000 00 01001 01000 010 10010 01100 11 	--! Hx040  SLT:   sets r18 to 1 if r8 < r9
00000 00 01001 01000 000 10011 01100 11 	--! Hx060  ADD:   adds values in r8 and r9 together into r19
01000 00 10010 10011 000 10100 01100 11 	--! Hx080  SUB:   subtracts r18 from reg 19 and stores in reg 20
00000 00 10100 10011 100 10101 01100 11 	--! Hx0A0  XOR:   XORs r19 and r20 into r21
00000 00 10100 10011 110 10110 01100 11 	--! Hx0C0  OR:    ORs r19 and r20 into r22 
00000 00 10110 10010 111 10111 01100 11 	--! Hx0E0  AND:   ANDs r18 and r22 into r23
01000 00 10010 10101 101 11000 01100 11 	--! Hx100  SRA:   shifts r21 right by r18 into r24
00000 00 00000 00000 001 11001 00101 11 	--! Hx120  AUIPC: adds the PC (currently Hx120) and Hx1000 into r25
00000 00 10010 11001 001 11001 01100 11 	--! Hx140  SLL:   shifts r25 left by r18 into r25
11111 11 10110 11001 100 00001 11000 11 	--! Hx160  BLT:   branches to previous instruction if r25 < r22
00000 10 10111 10010 000 00000 11000 11 	--! Hx180  BEQ:   branches two instructions ahead if r18 == r23
00000 00 00001 11000 000 11000 00100 11 	--! Hx1A0  ADDI:  adds Dx1 to r24 into r24
00000 00 00000 00000 010 00000 01000 11 	--! Hx1C0  SW:    Does nothing due to lack of FPGA
11111 10 11000 01000 001 00001 11000 11 	--! Hx1E0  BNE:   branches two instructions back if r8 and r24 are not equal
00000 00 00000 00000 010 11010 00000 11 	--! Hx200  LW:    due to dummy code, loads Hx55555555 into r26
01010 10 10101 11010 111 11011 00100 11 	--! Hx220  ANDI:  ANDs Hx00000555 and r26 into r27
10101 01 01010 11011 100 11100 00100 11 	--! Hx240  XORI:  XORs HxFFFFFAAA and r27 into r28
00101 01 01010 10011 110 11101 00100 11 	--! Hx260  ORI:   ORs Hx000002AA and r19 into r29
00000 00 11100 11101 011 11110 01100 11 	--! Hx280  SLTU:  if r29 < r28 (unsigned) puts 1 into r30
00000 00 00000 11100 010 11111 00100 11 	--! Hx2A0  SLTI:  if r28 < 0 puts 1 in r31
00000 00 10010 11100 101 11100 01100 11 	--! Hx2C0  SRL:   shift r28 to the right by r18, into r28
00001 11 10100 11101 101 00000 11000 11 	--! Hx2E0  BGE:   if r29 > r20, shift 7 instructions ahead
01010 01 01010 10101 010 01010 01010 11 	--! Hx300  GARBAGE
10101 01 01010 01010 101 10101 10101 11 	--! Hx320  GARBAGE
01010 10 10101 10101 010 01010 01010 11 	--! Hx340  GARBAGE
10101 01 01010 01010 101 10101 10101 11  	--! Hx360  GARBAGE
01010 10 10101 10101 010 01010 01010 11     --! Hx380  GARBAGE
10101 01 01010 01010 101 10101 10101 11 	--! Hx3A0  GARBAGE
00000 00 00000 00000 010 00000 01000 11 	--! Hx3C0  SW:    Does nothing due to lack of FPGA
00000 00 00000 00000 010 00000 01000 11 	--! HxCE0  SW:    Does nothing due to lack of FPGA